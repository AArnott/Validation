<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>netstandard2.1;netstandard2.0;netstandard1.3;net45</TargetFrameworks>
    <LangVersion>latest</LangVersion>
    <Nullable>enable</Nullable>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <CodeAnalysisRuleSet>Validation.ruleset</CodeAnalysisRuleSet>
    <GeneratePackageOnBuild>True</GeneratePackageOnBuild>
    <Title>Input and runtime validation</Title>
    <Summary>Provides convenient methods and code snippets for validating input and running state.</Summary>
    <Description>Method input validation and runtime checks that report errors or throw exceptions when failures are detected.</Description>
    <PackageProjectUrl>http://github.com/aarnott/Validation</PackageProjectUrl>
    <Company>Andrew Arnott</Company>
    <Authors>Andrew Arnott</Authors>
    <Product>Validation</Product>
    <RepositoryUrl>http://github.com/aarnott/Validation</RepositoryUrl>
    <RepositoryType>git</RepositoryType>
    <PackageTags>InputValidation IntegrityCheck</PackageTags>
    <SignAssembly>true</SignAssembly>
    <AssemblyOriginatorKeyFile>opensource.snk</AssemblyOriginatorKeyFile>
  </PropertyGroup>

  <ItemGroup>
    <EmbeddedResource Update="Strings.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Strings.Designer.cs</LastGenOutput>
    </EmbeddedResource>
  </ItemGroup>

  <ItemGroup>
    <None Include="tools\**">
      <Pack>true</Pack>
      <PackagePath>tools\%(RecursiveDir)%(FileName)%(Extension)</PackagePath>
    </None>
    <None Include="..\..\README.md">
      <Pack>true</Pack>
      <PackagePath>README.md</PackagePath>
    </None>
  </ItemGroup>
  <ItemGroup>
    <AdditionalFiles Include="stylecop.json" />
  </ItemGroup>

  <ItemDefinitionGroup>
    <!-- Not only are all our own package references just for building,
         we also want to suppress NETStandard.Library from being considered a dependency
         because for older PCL packages.config project types, it would flood their file
         with meaningless corefx packages. -->
    <PackageReference>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
  </ItemDefinitionGroup>

  <ItemGroup>
    <PackageReference Include="Nerdbank.GitVersioning" Version="2.2.3" />
    <!--<PackageReference Include="PdbGit" Version="3.0.41" />-->
    <PackageReference Include="StyleCop.Analyzers" Version="1.1.0-beta004" />
    <PackageReference Include="MSBuild.Sdk.Extras" Version="1.1.0" />
  </ItemGroup>

  <ItemGroup Condition="'$(TargetFramework)' != 'netstandard2.1'">
    <PackageReference Include="Nullable" Version="1.3.0" />
  </ItemGroup>

  <ItemGroup Condition="'$(TargetFramework)' == 'netstandard1.3'">
    <PackageReference Include="System.ComponentModel.Primitives" Version="4.3.0" />
    <PackageReference Include="System.Runtime.Serialization.Formatters" Version="4.3.0" />
  </ItemGroup>

  <ItemGroup>
    <Compile Update="Strings.Designer.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>Strings.resx</DependentUpon>
    </Compile>
  </ItemGroup>

  <ItemGroup Condition="'$(TargetFramework)' == 'net45'">
    <PackageReference Include="System.Runtime.InteropServices">
      <Version>4.3.0</Version>
    </PackageReference>
  </ItemGroup>

  <Target Name="SetNuSpecProperties" BeforeTargets="GenerateNuspec" DependsOnTargets="GetBuildVersion">
    <PropertyGroup>
      <PackageLicenseUrl>https://raw.githubusercontent.com/AArnott/Validation/$(GitCommitIdShort)/LICENSE.txt</PackageLicenseUrl>
    </PropertyGroup>
  </Target>

  <Import Project="$(MSBuildSDKExtrasTargets)" Condition="Exists('$(MSBuildSDKExtrasTargets)')" />
</Project>
