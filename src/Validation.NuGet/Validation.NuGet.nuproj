<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|AnyCPU">
      <Configuration>Debug</Configuration>
      <Platform>AnyCPU</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|AnyCPU">
      <Configuration>Release</Configuration>
      <Platform>AnyCPU</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>0f350ec9-d80d-4479-b602-c3d2deb45367</ProjectGuid>
  </PropertyGroup>
  <PropertyGroup>
    <NuProjPath>$(UserProfile)\.nuget\packages\NuProj\0.11.14-beta\tools\</NuProjPath>
    <NuProjPath Condition=" '$(NuProjPath)' == '' ">$(MSBuildExtensionsPath)\NuProj\</NuProjPath>
    <NuSpecTemplate>Validation.nuspec</NuSpecTemplate>
  </PropertyGroup>
  <Import Project="$(NuProjPath)\NuProj.props" Condition="Exists('$(NuProjPath)\NuProj.props')" />
  <PropertyGroup Label="Configuration">
    <Id>Validation</Id>
    <Title>Input and runtime validation</Title>
    <Authors>Andrew Arnott</Authors>
    <Owners>Andrew Arnott</Owners>
    <Summary>Provides convenient methods and code snippets for validating input and running state.</Summary>
    <Description>Method input validation and runtime checks that report errors or throw exceptions when failures are detected. Check out the code snippets available at https://github.com/AArnott/Validation/tree/master/My%20Code%20Snippets and make your input validation even easier with auto-completion for quoted parameter names.</Description>
    <ReleaseNotes>Add support for Xamarin.iOS (Unified)</ReleaseNotes>
    <ProjectUrl>http://github.com/aarnott/Validation</ProjectUrl>
    <LicenseUrl>https://raw.githubusercontent.com/AArnott/Validation/$CommitId$/LICENSE.txt</LicenseUrl>
    <Copyright>Copyright © Andrew Arnott</Copyright>
    <Tags>InputValidation IntegrityCheck</Tags>
    <EmbedSourceFiles>true</EmbedSourceFiles>
    <MinClientVersion>2.8.3</MinClientVersion>
    <NoPackageAnalysis>true</NoPackageAnalysis>
  </PropertyGroup>
  <ItemGroup>
    <ProjectReference Include="..\Validation.NewPortable\Validation.NewPortable.csproj" />
    <ProjectReference Include="..\Validation\Validation.csproj" />
  </ItemGroup>
  <ItemGroup>
    <Content Include="..\..\README.md">
      <Link>README.md</Link>
    </Content>
    <Content Include="tools\uninstall_snippets.cmd" />
    <Content Include="tools\install_snippets.cmd" />
  </ItemGroup>
  <ItemGroup>
    <Content Include="tools\2013\RequiresNotNull.snippet" />
    <Content Include="tools\2013\RequiresNotNullOrEmpty.snippet" />
    <Content Include="tools\2015\RequiresNotNull.snippet" />
    <Content Include="tools\2015\RequiresNotNullOrEmpty.snippet" />
  </ItemGroup>
  <ItemGroup>
    <None Include="Validation.nuspec" />
  </ItemGroup>
  <Import Project="$(NuProjPath)\NuProj.targets" />
  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildProjectDirectory), EnlistmentInfo.targets))\EnlistmentInfo.targets" Condition=" '$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildProjectDirectory), EnlistmentInfo.targets))' != '' " />
  <Target Name="CopyAssemblyToLibDotNetFolder" DependsOnTargets="ConvertItems" AfterTargets="ConvertItems">
    <ItemGroup>
      <File Include="@(File)"
            Condition=" '%(File.TargetFrameworkMoniker)' == '.NETPortable,Version=v5.0' ">
        <TargetPath>lib\dotnet\%(FileName)%(Extension)</TargetPath>
      </File>
      <File Include="@(File)"
            Condition=" '%(File.TargetFrameworkMoniker)' == '.NETPortable,Version=v5.0' ">
        <TargetPath>lib\netstandard1.0\%(FileName)%(Extension)</TargetPath>
      </File>
    </ItemGroup>
  </Target>
</Project>